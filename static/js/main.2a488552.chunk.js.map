{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","className","src","this","props","id","alt","name","email","Component","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","response","json","users","filteredrobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAYeA,G,YAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,mCCSCQ,E,4JAbX,WACI,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAK,wBAAwBC,KAAKC,MAAMC,GAAG,gBAAiBC,IAAI,UACrE,gCACI,6BAAKH,KAAKC,MAAMG,OAChB,4BAAIJ,KAAKC,MAAMI,kB,GAPhBC,aCuBJC,E,4JArBX,WACI,IAAMC,EAAOR,KAAKC,MAAMO,OACxB,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CACIT,GAAIM,EAAOG,GAAGT,GACdE,KAAMI,EAAOG,GAAGP,KAChBC,MAAOG,EAAOG,GAAGN,iB,GAX1BC,aCWRM,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,8BACI,uBACIC,KAAK,SACLhB,UAAU,mCACViB,YAAY,gBACZC,SAAUH,OCGXI,G,YARA,SAAChB,GACZ,OACI,qBAAKH,UAAU,SAAf,SACKG,EAAMiB,aCyCJC,E,kDAtCX,aAAe,IAAD,8BACV,gBAaJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAb1C,EAAKC,MAAQ,CACTlB,OAAQ,GACRe,YAAa,IAJP,E,qDAQd,WAAqB,IAAD,OAChBI,MAAM,8CACDpC,MAAK,SAAAqC,GAAQ,OAAIA,EAASC,UAC1BtC,MAAK,SAAAuC,GAAK,OAAI,EAAKR,SAAS,CAAEd,OAAQsB,S,oBAO/C,WAAU,IAAD,EAC2B9B,KAAK0B,MAA7BlB,EADH,EACGA,OAAQe,EADX,EACWA,YACVQ,EAAiBvB,EAAOwB,QAAO,SAAAC,GACjC,OAAOA,EAAM7B,KAAK8B,cAAcC,SAASZ,EAAYW,kBAEzD,OAAS1B,EAAO4B,OAGR,sBAAKtC,UAAU,KAAf,UACI,8CACA,cAAC,EAAD,CAAWe,aAAcb,KAAKoB,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUZ,OAAQuB,SAN9B,oBAAIjC,UAAU,KAAd,yB,GA1BMQ,aCAlB+B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BrD,M","file":"static/js/main.2a488552.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Component } from \"react\";\r\n\r\nclass Card extends Component {\r\n    render() {\r\n        return (\r\n            <div className='tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5'>\r\n                <img src={'https://robohash.org/'+this.props.id+'?size=200x200'} alt=\"robot\" />\r\n                <div>\r\n                    <h3>{this.props.name}</h3>\r\n                    <p>{this.props.email}</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Card;","import { Component } from 'react';\r\nimport Card from './Card';\r\n\r\nclass CardList extends Component {\r\n    render() {\r\n        const robots=this.props.robots;\r\n        return (\r\n            <div>\r\n                {\r\n                    robots.map((user, i) => {\r\n                        return (\r\n                            <Card\r\n                                id={robots[i].id}\r\n                                name={robots[i].name}\r\n                                email={robots[i].email}\r\n                            />\r\n                        );\r\n                    }\r\n                    )\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CardList;","\r\nconst SearchBox = ({searchChange}) => { \r\n    return(\r\n        <div>\r\n            <input\r\n                type='search'\r\n                className='pa3 ba b--green bg-lightest-blue'\r\n                placeholder='search robots' \r\n                onChange={searchChange}   \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\nimport './Scroll.css'\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div className='scroll'>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import { Component } from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll';\r\n\r\n\r\nclass App extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => this.setState({ robots: users }))\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value })\r\n    }\r\n\r\n    render() {\r\n        const { robots, searchfield } = this.state\r\n        const filteredrobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        return (!robots.length ?\r\n            <h1 className='tc'>loading</h1> :\r\n            (\r\n                <div className='tc'>\r\n                    <h1>ROBO FRIENDS</h1>\r\n                    <SearchBox searchChange={this.onSearchChange} />\r\n                    <Scroll>\r\n                        <CardList robots={filteredrobots} />\r\n                    </Scroll>                 \r\n                </div>\r\n            )\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\nimport App from './containers/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}